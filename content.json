{"pages":[{"title":"所有标签","date":"2021-08-28T15:08:07.204Z","path":"tags/index.html","text":""},{"title":"所有分类","date":"2021-08-28T15:08:07.204Z","path":"categories/index.html","text":""},{"title":"","date":"2021-08-28T15:08:07.204Z","path":"about/index.html","text":"下面写关于自己的内容"},{"title":"我的朋友们","date":"2021-08-28T15:08:07.204Z","path":"friends/index.html","text":"请看，这些是大佬 欢迎大家留下友链~~添加需要以下这些信息 12345- title: ControlNet # 名称avatar: https://controlnet.space/images/logo.png # 头像url: https://controlnet.space/ # 链接keywords: # 关键词 可选description: # 描述 可选"}],"posts":[{"title":"JSON.stringify中的replacer","date":"2021-08-25T05:00:32.000Z","path":"posts/29099/","text":"需求分析当我们在遇到需要深拷贝一个对象所有属性的时候会想把关联的数据排除在外，例如这样的一个对象关联的send_by_user 123456789101112131415161718192021222324252627282930&#123; &quot;id&quot;: 41, &quot;title&quot;: &quot;消息标题&quot;, &quot;content&quot;: &quot;消息内容&quot;, &quot;send_by&quot;: 2, &quot;send_by_user&quot;: &#123; &quot;id&quot;: 2, &quot;name&quot;: &quot;guoguixin&quot;, &quot;telephone&quot;: &quot;&quot;, &quot;email&quot;: &quot;10000@qq.com&quot;, &quot;department_id&quot;: 1, &quot;department_name&quot;: &quot;&quot;, &quot;department&quot;: &#123; &quot;id&quot;: 1, &quot;name&quot;: &quot;产品设计部&quot;, &quot;status&quot;: 1, &quot;created_at&quot;: &quot;1970-01-01T08:00:00+08:00&quot;, &quot;updated_at&quot;: &quot;2021-08-21T16:12:05+08:00&quot; &#125;, &quot;status&quot;: 1, &quot;info&quot;: &quot;&quot;, &quot;created_at&quot;: &quot;1970-01-01T08:00:00+08:00&quot;, &quot;updated_at&quot;: &quot;1970-01-01T08:00:00+08:00&quot; &#125;, &quot;send_to&quot;: 2, &quot;status&quot;: 2, &quot;created_at&quot;: &quot;2021-08-21T16:55:53+08:00&quot;, &quot;deleted_at&quot;: &quot;0001-01-01T00:00:00Z&quot;, &quot;updated_at&quot;: &quot;2021-08-25T10:14:57+08:00&quot;&#125; 当你的需求是修改这个对象并且整体提交更新的时候会发现以下问题 这个多余关联的对象不需要提交 发出请求的数据量变大 解决方法控制 JSON.stringify 序列化层级JSON.stringify(value[, replacer [, space]]) 使用JSON.stringify时传入第二个参数 replacer 可选如果该参数是一个函数，则在序列化过程中，被序列化的值的每个属性都会经过该函数的转换和处理；如果该参数是一个数组，则只有包含在这个数组中的属性名才会被序列化到最终的 JSON 字符串中；如果该参数为 null 或者未提供，则对象所有的属性都会被序列化。 那我们只需要通过replacer传入函数过滤掉属性值是Object即可 1234567891011JSON.stringify(message,(k,v) =&gt; &#123; // k,v分别代表传入对象的属性名和属性值 // 判断k是因为replace会传入一个 传入参数对象 的值,但是没有k, 我们直接返回即可 if(k) &#123; return v &#125; if(typeof v === &quot;object&quot;) &#123; return null &#125; return v&#125;) 参考资料 MDN Web Docs","tags":[],"categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://luanxu.me/categories/JavaScript/"}]}],"categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://luanxu.me/categories/JavaScript/"}],"tags":[]}